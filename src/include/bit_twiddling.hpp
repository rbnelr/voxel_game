
static constexpr s32 GET_CONST_POT (s32 x) { // please only use this on constexpr values
	return
		(x == (1<< 0)) ?  0 :
		(x == (1<< 1)) ?  1 :
		(x == (1<< 2)) ?  2 :
		(x == (1<< 3)) ?  3 :
		(x == (1<< 4)) ?  4 :
		(x == (1<< 5)) ?  5 :
		(x == (1<< 6)) ?  6 :
		(x == (1<< 7)) ?  7 :
		(x == (1<< 8)) ?  8 :
		(x == (1<< 9)) ?  9 :
		(x == (1<<10)) ? 10 :
		(x == (1<<11)) ? 11 :
		(x == (1<<12)) ? 12 :
		(x == (1<<13)) ? 13 :
		(x == (1<<14)) ? 14 :
		(x == (1<<15)) ? 15 :
		(x == (1<<16)) ? 16 :
		(x == (1<<17)) ? 17 :
		(x == (1<<18)) ? 18 :
		(x == (1<<19)) ? 19 :
		(x == (1<<20)) ? 20 :
		(x == (1<<21)) ? 21 :
		(x == (1<<22)) ? 22 :
		(x == (1<<23)) ? 23 :
		(x == (1<<24)) ? 24 :
		(x == (1<<25)) ? 25 :
		(x == (1<<26)) ? 26 :
		(x == (1<<27)) ? 27 :
		(x == (1<<28)) ? 28 :
		(x == (1<<29)) ? 29 :
		(x == (1<<30)) ? 30 :
		(x == (1<<31)) ? 31 :
		-1;
}

static u32 round_up_to_pot (u32 i) {
	--i;
	i |= i >> 1;
	i |= i >> 2;
	i |= i >> 4;
	i |= i >> 8;
	i |= i >> 16;
	++i;
	return i;
}

#if 0
static s64 interleave_bits (s32 a, s32 b) {
	s64 p = a;
	s64 q = b;
	
	p = ((p & 0x00000000ffff0000ll) << 16)|(p & 0x000000000000ffffll);
	p = ((p & 0x0000ff000000ff00ll) <<  8)|(p & 0x000000ff000000ffll);
	p = ((p & 0x00f000f000f000f0ll) <<  4)|(p & 0x000f000f000f000fll);
	p = ((p & 0x0c0c0c0c0c0c0c0cll) <<  2)|(p & 0x03030c0303030303ll);
	p = ((p & 0x2222222222222222ll) <<  1)|(p & 0x1111111111111111ll);
	
	q = ((q & 0x00000000ffff0000ll) << 16)|(q & 0x000000000000ffffll);
	q = ((q & 0x0000ff000000ff00ll) <<  8)|(q & 0x000000ff000000ffll);
	q = ((q & 0x00f000f000f000f0ll) <<  4)|(q & 0x000f000f000f000fll);
	q = ((q & 0x0c0c0c0c0c0c0c0cll) <<  2)|(q & 0x03030c0303030303ll);
	q = ((q & 0x2222222222222222ll) <<  1)|(q & 0x1111111111111111ll);
	
	return (q << 1) | p;
}
#endif
